# Generated by Django 5.2.5 on 2025-09-21 13:57

import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Patient',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('mrn', models.CharField(blank=True, max_length=50, null=True)),
                ('last_name', models.CharField(max_length=100)),
                ('first_name', models.CharField(max_length=100)),
                ('middle_name', models.CharField(blank=True, max_length=100)),
                ('suffix', models.CharField(blank=True, max_length=50)),
                ('name', models.CharField(max_length=200)),
                ('dob', models.DateField(verbose_name='Date of Birth')),
                ('sex', models.CharField(choices=[('M', 'Male'), ('F', 'Female'), ('O', 'Other'), ('U', 'Unknown')], default='U', max_length=1)),
                ('location', models.CharField(blank=True, max_length=100)),
                ('diagnosis', models.CharField(blank=True, max_length=255)),
                ('patient_information', models.TextField(blank=True, help_text='Admission-day narrative or key summary for this patient.', verbose_name='Patient Information')),
                ('admission_date', models.DateField(blank=True, null=True)),
                ('admission_time', models.TimeField(blank=True, null=True)),
                ('status', models.CharField(choices=[('ACTIVE', 'Active'), ('DISCHARGED', 'Discharged'), ('ARCHIVED', 'Archived')], db_index=True, default='ACTIVE', max_length=16)),
                ('discharged_at', models.DateTimeField(blank=True, null=True)),
                ('archived_at', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('attending', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='patients', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ('-admission_date', '-admission_time', '-created_at'),
            },
        ),
        migrations.CreateModel(
            name='OvernightEvent',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.TextField()),
                ('resolved', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('patient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='overnight_events', to='patients.patient')),
            ],
            options={
                'ordering': ('-created_at',),
            },
        ),
        migrations.CreateModel(
            name='Notification',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('message', models.TextField(help_text='Notification body shown to the user.')),
                ('level', models.CharField(choices=[('info', 'Info'), ('warning', 'Warning'), ('critical', 'Critical')], default='info', max_length=16)),
                ('category', models.CharField(choices=[('generic', 'Generic'), ('assignment', 'Patient Assignment'), ('admission', 'Admission'), ('discharge', 'Discharge'), ('reassignment', 'Reassignment'), ('system', 'System')], db_index=True, default='generic', help_text='Semantic category/type of this notification (e.g., admission, discharge).', max_length=32)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('visible_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('read_at', models.DateTimeField(blank=True, null=True)),
                ('acknowledged_at', models.DateTimeField(blank=True, null=True)),
                ('acknowledged_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='acknowledged_notifications', to=settings.AUTH_USER_MODEL)),
                ('recipient', models.ForeignKey(help_text='User who will see this notification in-app.', on_delete=django.db.models.deletion.CASCADE, related_name='notifications', to=settings.AUTH_USER_MODEL)),
                ('patient', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='patients.patient')),
            ],
            options={
                'ordering': ('-visible_at', '-created_at'),
            },
        ),
        migrations.CreateModel(
            name='AuditLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('event', models.CharField(choices=[('ATTENDING_CHANGED', 'Attending changed'), ('LOGIN_SUCCESS', 'Login success'), ('LOGIN_FAILED', 'Login failed'), ('LOGOUT', 'Logout')], max_length=40)),
                ('username', models.CharField(blank=True, default='', max_length=150)),
                ('ip_address', models.GenericIPAddressField(blank=True, null=True)),
                ('user_agent', models.TextField(blank=True, default='')),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('changed_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='patient_audit_logs', to=settings.AUTH_USER_MODEL)),
                ('new_attending', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='audit_new_attending', to=settings.AUTH_USER_MODEL)),
                ('old_attending', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='audit_old_attending', to=settings.AUTH_USER_MODEL)),
                ('patient', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='audit_logs', to='patients.patient')),
            ],
            options={
                'ordering': ('-created_at',),
            },
        ),
        migrations.CreateModel(
            name='Assignment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('role', models.CharField(blank=True, max_length=50)),
                ('start_date', models.DateField()),
                ('end_date', models.DateField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('provider', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='patient_assignments', to=settings.AUTH_USER_MODEL)),
                ('patient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='assignments', to='patients.patient')),
            ],
            options={
                'ordering': ('-start_date', '-created_at'),
            },
        ),
        migrations.CreateModel(
            name='PatientWatch',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('note', models.CharField(blank=True, max_length=200)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('archived_at', models.DateTimeField(blank=True, null=True)),
                ('patient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='watchers', to='patients.patient')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='watched_patients', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Signout',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('entry_date', models.DateField()),
                ('text', models.TextField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='created_signouts', to=settings.AUTH_USER_MODEL)),
                ('patient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='signouts', to='patients.patient')),
            ],
            options={
                'ordering': ('-entry_date', '-created_at'),
            },
        ),
        migrations.CreateModel(
            name='Todo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.TextField()),
                ('is_completed', models.BooleanField(default=False)),
                ('expires_at', models.DateTimeField(blank=True, null=True)),
                ('completed_at', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='created_todos', to=settings.AUTH_USER_MODEL)),
                ('patient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='todos', to='patients.patient')),
            ],
            options={
                'verbose_name': 'To-Do',
                'verbose_name_plural': 'To-Dos',
                'ordering': ('is_completed', '-created_at'),
            },
        ),
        migrations.AddIndex(
            model_name='patient',
            index=models.Index(fields=['mrn'], name='patients_pa_mrn_d0102f_idx'),
        ),
        migrations.AddIndex(
            model_name='patient',
            index=models.Index(fields=['name'], name='patients_pa_name_8d04ea_idx'),
        ),
        migrations.AddIndex(
            model_name='patient',
            index=models.Index(fields=['admission_date', 'admission_time'], name='patients_pa_admissi_92123e_idx'),
        ),
        migrations.AddIndex(
            model_name='patient',
            index=models.Index(fields=['attending'], name='patients_pa_attendi_c96814_idx'),
        ),
        migrations.AddIndex(
            model_name='patient',
            index=models.Index(fields=['status'], name='patients_pa_status_ca3fc5_idx'),
        ),
        migrations.AddIndex(
            model_name='notification',
            index=models.Index(fields=['recipient', 'visible_at'], name='patients_no_recipie_5bfbf1_idx'),
        ),
        migrations.AddIndex(
            model_name='notification',
            index=models.Index(fields=['level'], name='patients_no_level_501021_idx'),
        ),
        migrations.AddIndex(
            model_name='notification',
            index=models.Index(fields=['read_at'], name='patients_no_read_at_cb66fc_idx'),
        ),
        migrations.AddIndex(
            model_name='notification',
            index=models.Index(fields=['category', 'patient', 'visible_at'], name='patients_no_categor_7fc8b3_idx'),
        ),
        migrations.AddIndex(
            model_name='notification',
            index=models.Index(condition=models.Q(('read_at__isnull', True)), fields=['recipient'], name='notify_unread_idx'),
        ),
        migrations.AddIndex(
            model_name='auditlog',
            index=models.Index(fields=['event', 'created_at'], name='patients_au_event_6dd639_idx'),
        ),
        migrations.AddIndex(
            model_name='auditlog',
            index=models.Index(fields=['patient', 'created_at'], name='patients_au_patient_a72b89_idx'),
        ),
        migrations.AddIndex(
            model_name='auditlog',
            index=models.Index(fields=['username', 'created_at'], name='patients_au_usernam_450adb_idx'),
        ),
        migrations.AddIndex(
            model_name='assignment',
            index=models.Index(fields=['provider'], name='patients_as_provide_97f435_idx'),
        ),
        migrations.AddIndex(
            model_name='assignment',
            index=models.Index(fields=['start_date'], name='patients_as_start_d_3058ca_idx'),
        ),
        migrations.AddIndex(
            model_name='patientwatch',
            index=models.Index(fields=['user', 'created_at'], name='patients_pa_user_id_49d13d_idx'),
        ),
        migrations.AddIndex(
            model_name='patientwatch',
            index=models.Index(fields=['patient', 'created_at'], name='patients_pa_patient_f8e461_idx'),
        ),
        migrations.AddConstraint(
            model_name='patientwatch',
            constraint=models.UniqueConstraint(condition=models.Q(('archived_at__isnull', True)), fields=('user', 'patient'), name='uniq_active_watch_per_user_patient'),
        ),
    ]
